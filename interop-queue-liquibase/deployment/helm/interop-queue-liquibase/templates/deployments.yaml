apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "interop-queue-liquibase.fullname" . }}
  labels:
    app: {{ template "interop-queue-liquibase.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "interop-queue-liquibase.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "interop-queue-liquibase.fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
      annotations:
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ template "interop-queue-liquibase.fullname" . }}
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/node
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ template "interop-queue-liquibase.fullname" . }}
      containers:
        - name: interop-queue-liquibase
          image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
          ports:
            - containerPort: 80
          env:
            {{- include "interop-queue-liquibase.env" . | nindent 10 }}
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /ping
              scheme: HTTP
              port: 80
            timeoutSeconds: 5
            periodSeconds: 60
            failureThreshold: 5
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /ping
              scheme: HTTP
              port: 80
            timeoutSeconds: 2
      restartPolicy: Always
